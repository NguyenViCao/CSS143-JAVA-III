package StateCapitalsQuiz;
import java.awt.Color;
import java.awt.Toolkit;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *<pre>
 * Class        EditArtist
 * File         EditArtist.java
 * Description  A class used to edit existing artist.
 * @author	<i>Niko Culevski</i>
 * @see         java.awt.Color
 * @see         java.awt.Toolkit
 * @see         javax.swing.JOptionPane
 * @version	1.2.0
 * Environment  PC, Windows 10, jdk1.8.0_214, NetBeans 11.3
 * Date         3/6/2021
 * History log  8/24/2016, 4/3/2020
 *</pre>
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class EditPlayer extends javax.swing.JDialog
{
    private Player newPlayer;                   // Player to be created
    private boolean error = false;              // Checking for errors in input
    private String errorMessage = "";           // Error message
    private final int MAX_AGE = 100;          // Maximum age for player
    private final int MIN_AGE = 0;             // Minimum age for player
    private final Color white = Color.WHITE;    // Default background color for input textfield
    private final Color pink = Color.PINK;      // Background color for bad input textfield
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor   EditArtist()-default constructor
     * Description   Create an instance of the GUI form, set the default
     *               JButton to be saveJButton, set icon image, center form.
     * @author       <i>Niko Culevski</i>
     * Date          4/3/2020
     * History Log   7/18/2018
     *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    public EditPlayer()
    {
        initComponents();
        //set saveJButton as default button
        this.getRootPane().setDefaultButton(saveJButton);
        //set icon
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/Images/State Capitals Small.png"));
        this.setLocationRelativeTo(null);       //center form
        ageJTextField.requestFocus();
        newPlayer = null;		       
        setAlwaysOnTop(true);
        setModal(true);
        nameJTextField.requestFocus();
    }
     /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor  EditComposer()-overloaded copy constructor
     * Description  Calls the default constructor to create an instance of the
     *              GUI form and displays information of selected artist.
     * @param       player Player
     * @author      <i>Niko Culevski</i>
     * Date         3/6/2021
     * History Log  7/18/2018, 4/3/2020
     *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/    
    public EditPlayer(Player player)
    {
        this();     //call default constructor
        nameJTextField.setText(player.getName());
        ageJTextField.setText(String.valueOf(player.getAge()));
        totalQuestionJTextField.setText(String.valueOf(player.getTotalQuestion()));
        noCorrectJTextField.setText(String.valueOf(player.getNoCorrect()));
        nameJTextField.requestFocus();
        nameJTextField.selectAll();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleJPanel = new javax.swing.JPanel();
        addEditJLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        displayJPanel = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        ageJLabel = new javax.swing.JLabel();
        ageJTextField = new javax.swing.JTextField();
        balanceJLabel = new javax.swing.JLabel();
        totalQuestionJTextField = new javax.swing.JTextField();
        balanceJLabel1 = new javax.swing.JLabel();
        noCorrectJTextField = new javax.swing.JTextField();
        controlPanel = new javax.swing.JPanel();
        saveJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Player");
        setResizable(false);

        addEditJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 36)); // NOI18N
        addEditJLabel.setForeground(new java.awt.Color(51, 0, 0));
        addEditJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addEditJLabel.setText("Edit Player");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/State Capitals Small.png"))); // NOI18N

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, titleJPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEditJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                .addContainerGap())
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addGroup(titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEditJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayJPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 15)));
        displayJPanel.setPreferredSize(new java.awt.Dimension(341, 201));
        displayJPanel.setLayout(new java.awt.GridLayout(4, 2, 5, 5));

        nameJLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nameJLabel.setText("Name of Player:");
        displayJPanel.add(nameJLabel);

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nameJTextField.setToolTipText("2 to 40 letters and spaces only");
        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(nameJTextField);

        ageJLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ageJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        ageJLabel.setText("Age:");
        displayJPanel.add(ageJLabel);

        ageJTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        ageJTextField.setToolTipText("2 to 40 letters and spaces only");
        ageJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(ageJTextField);

        balanceJLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        balanceJLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        balanceJLabel.setText("Total Questions:");
        displayJPanel.add(balanceJLabel);

        totalQuestionJTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        totalQuestionJTextField.setToolTipText("Integer between 1600 to 2016");
        totalQuestionJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                totalQuestionJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(totalQuestionJTextField);

        balanceJLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        balanceJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        balanceJLabel1.setText("Number of Correct Answers:");
        displayJPanel.add(balanceJLabel1);

        noCorrectJTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        noCorrectJTextField.setToolTipText("Integer between 1600 to 2016");
        noCorrectJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                noCorrectJTextFieldFocusLost(evt);
            }
        });
        displayJPanel.add(noCorrectJTextField);

        controlPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        controlPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        saveJButton.setBackground(new java.awt.Color(204, 255, 204));
        saveJButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        saveJButton.setMnemonic('S');
        saveJButton.setText("Save");
        saveJButton.setMinimumSize(new java.awt.Dimension(57, 45));
        saveJButton.setPreferredSize(new java.awt.Dimension(57, 35));
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(saveJButton);

        cancelJButton.setBackground(new java.awt.Color(204, 255, 204));
        cancelJButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cancelJButton.setMnemonic('n');
        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });
        controlPanel.add(cancelJButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(titleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(displayJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(titleJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(88, 88, 88)
                    .addComponent(displayJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(81, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       saveJButtonActionPerformed()
     * Description  Create new player if all fields are valid.
     * @param       evt java.awt.event.ActionEvent
     * @author      <i>Niko Culevski</i>
     * Date         3/6/2021
     * History Log  7/18/2018, 4/3/2020
     *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveJButtonActionPerformed
    {//GEN-HEADEREND:event_saveJButtonActionPerformed
        // Read all inputs as strings
        String playerName = nameJTextField.getText();
        String ageString = ageJTextField.getText();
        String totalQuestionString = totalQuestionJTextField.getText();
        String noCorrectString = noCorrectJTextField.getText();
        // Validate all inputs
        if(!Validation.isValidName(playerName))
        {
            errorMessage += "Invalid Player Name\n";
            nameJTextField.requestFocus();
            error = true;
            nameJTextField.setToolTipText(nameJTextField.getToolTipText() + 
                    "--Invalid Player Name");
        }
        else if(!Validation.isInteger(ageString, MIN_AGE, MAX_AGE))
        {
            errorMessage += "Invalid age\n";
            ageJTextField.requestFocus();
            error = true;
            ageJTextField.setToolTipText(ageJTextField.getToolTipText() + 
                    "--Invalid Age");
        }
        else if(!Validation.isInteger(totalQuestionString))
        {
            errorMessage += "Invalid number of total Questions\n";
            totalQuestionJTextField.requestFocus();
            error = true;
            totalQuestionJTextField.setToolTipText(totalQuestionJTextField.getToolTipText() + 
                    "--Invalid number of total Questions");
        }
        else if(!Validation.isInteger(noCorrectString))
        {
            errorMessage += "Invalid number of correct Answers\n";
            noCorrectJTextField.requestFocus();
            error = true;
            noCorrectJTextField.setToolTipText(noCorrectJTextField.getToolTipText() + 
                    "--Invalid number of correct Answers");
        }
        else
            error = false;
       
        if (!error)     // all fields are valid, create a newPlayer
        {
            try
            {
                playerName = nameJTextField.getText();
                int age = Integer.parseInt(ageJTextField.getText());
                int totalQuestion = Integer.parseInt(totalQuestionJTextField.getText());
                int noCorrect = Integer.parseInt(noCorrectJTextField.getText());
                newPlayer = new Player(playerName, age, totalQuestion, noCorrect);                
                this.dispose();     //close form
            }
            catch(NumberFormatException ex)
            {
                //We should never get here, throw runtime exception
                throw new RuntimeException("Error parsing input");
            }
        }
    }//GEN-LAST:event_saveJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       getPlayer()
     * Description  Getter method to return newArtist
     * @author      <i>Niko Culevski</i>
     * @return      newArtist Player
     * Date         4/3/2020
     * History Log  7/18/2018
     *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    public Player getPlayer()
    {
        return newPlayer;
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        cancelJButtonActionPerformed()
     * Description   Cancel the operation of edit. newArtist remains null.
     * @param        java.awt.event.ActionEvent 
     * @author       <i>Niko Culevski</i>
     * Date          4/3/2020
     * History Log   7/18/2018
     *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/       
    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelJButtonActionPerformed
    {//GEN-HEADEREND:event_cancelJButtonActionPerformed
        this.dispose();        
    }//GEN-LAST:event_cancelJButtonActionPerformed
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       nameJTextFieldFocusLost()
     * Description  Validate name.
     * @parem       java.awt.event.FocusEvent 
     * @author      <i>Niko Culevski</i>
     * Date         3/6/2021
     * History Log  7/18/2018, 4/3/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_nameJTextFieldFocusLost
    {//GEN-HEADEREND:event_nameJTextFieldFocusLost
        // Set background textfield color
        String input = nameJTextField.getText();
        if(Validation.isValidName(input))
            nameJTextField.setBackground(white);
        else
            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       yearJTextFieldFocusLost()
     * Description  Validate year of birth.
     * @parem       java.awt.event.FocusEvent 
     * @author      <i>Niko Culevski</i>
     * Date         3/6/2021
     * History Log  7/18/2018, 4/3/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void ageJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_ageJTextFieldFocusLost
    {//GEN-HEADEREND:event_ageJTextFieldFocusLost
        // Set background textfield color
        String input = ageJTextField.getText();
        if(Validation.isInteger(input, MIN_AGE, MAX_AGE))
            ageJTextField.setBackground(white);
        else
            ageJTextField.setBackground(pink);
    }//GEN-LAST:event_ageJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       cityJTextFieldFocusLost()
     * Description  Validate city.
     * @parem       java.awt.event.FocusEvent 
     * @author      <i>Niko Culevski</i>
     * Date         3/6/2021
     * History Log  7/18/2018, 4/3/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void totalQuestionJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_totalQuestionJTextFieldFocusLost
    {//GEN-HEADEREND:event_totalQuestionJTextFieldFocusLost
        // Set background textfield color
        String input = totalQuestionJTextField.getText();
        if(Validation.isInteger(input))
            totalQuestionJTextField.setBackground(white);
        else
            totalQuestionJTextField.setBackground(pink);
    }//GEN-LAST:event_totalQuestionJTextFieldFocusLost
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method       countryJTextFieldFocusLost()
     * Description  Validate country.
     * @parem       java.awt.event.FocusEvent 
     * @author      <i>Niko Culevski</i>
     * Date         3/6/2021
     * History Log  7/18/2018, 4/3/2020
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void noCorrectJTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_noCorrectJTextFieldFocusLost
    {//GEN-HEADEREND:event_noCorrectJTextFieldFocusLost
        // Set background textfield color     
        String input = noCorrectJTextField.getText();
        if(Validation.isInteger(input))
            noCorrectJTextField.setBackground(white);
        else
            noCorrectJTextField.setBackground(pink);
    }//GEN-LAST:event_noCorrectJTextFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addEditJLabel;
    private javax.swing.JLabel ageJLabel;
    private javax.swing.JTextField ageJTextField;
    private javax.swing.JLabel balanceJLabel;
    private javax.swing.JLabel balanceJLabel1;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTextField noCorrectJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JPanel titleJPanel;
    private javax.swing.JTextField totalQuestionJTextField;
    // End of variables declaration//GEN-END:variables
}
